# Shared and top-level CLI output text.
cli:
  telemetry_enabled: |
    Telemetry has been enabled by default for this beta release
    of Chef Workstation. The anonymous data we gather is used to
    determine how we can impove your Chef Workstation experience.

    To disable it, add the following entry to
    %1:

    [telemetry]
    enable=false

    For more information about what we data gather and additional opt-out
    options, please visit https://chef.sh/TODO.

  creating_config: "Creating config file '%1'."

# Text specific to each command
commands:
  base:
    config: Location of config file. Defaults to %1
    version: Show the current version of Chef Workstation.
    version_for_help: "Chef Workstation Version: %1\n\n"
    help_for: "Show help for the 'chef %1' command."
    description: |
      Congratulations! You are using chef: your gateway
      to managing everything from a single node to an entire Chef
      infrastructure.

    usage: chef COMMAND [options...]

    usage_full: |
      chef COMMAND [options...]

    status:
      connecting: "Connecting..."
      connected: "Connected."
      connection_failed: "Connection failed: %1"
    help: "Show usage information"
    alias_for: "Alias for: "
    aliases: "ALIASES:"
    usage_msg: "USAGE: "

  help:
    description: Show help and usage for 'chef' or a given subcommand.
    usage: chef <help|-h|--help> [COMMAND_OR_ALIAS]
    usage_full: |
      chef <help|-h|--help>
      chef <help|-h|--help> [COMMAND_OR_ALIAS]
      chef <COMMAND_OR_ALIAS> <help|-h|--help>

  version:
    description: Show the current version of Chef Workstation.
    usage: chef <version|-v|--version>
    usage_full: chef <version|-v|--version>

  config:
    description: Manage Chef Workstation configuration
    usage: chef config [SUBCOMMAND] [FLAGS]
    usage_full: chef config [SUBCOMMAND] [FLAGS]
    show:
      description: Echo out Chef Workstation configuration to stdout
      usage: chef config show [FLAGS]
      usage_full: chef config show [FLAGS]
      source: "Config loaded from %1path %2."

  target:
    description: Manage a target node or device.
    usage: chef target [SUBCOMMAND] [FLAGS]
    usage_full: chef target [SUBCOMMAND] [FLAGS]

    converge:
      aborted: Canceling request due to interrupt.
      description: Apply a change to a target node.

      usage: |
        chef target converge <TARGET> <RESOURCE> <RESOURCE_NAME> [PROPERTIES] [FLAGS]
        chef target converge <TARGET> <RECIPE> [FLAGS]

      usage_full: |
        chef target converge <TARGET> <RESOURCE> <RESOURCE_NAME> [PROPERTIES] [FLAGS]

          Converge the specified <TARGET> with the single <RESOURCE>.
          [PROPERTIES] should be specified as key=value. For example:

            chef target converge web01 directory /tmp/test mode="0777" action=create

        chef target converge <TARGET> <RECIPE> [FLAGS]

          Converge the specified <TARGET> with the single recipe located at
          <RECIPE>. For example:

            chef target converge web01 path/to/cookbook/recipe.rb
            chef target converge web01 path/to/cookbook
            chef target converge web01 cookbook_name
            chef target converge web01 cookbook_name::recipe_name

        ARGUMENTS:
          <TARGET>          The host or IP address to converge. Can also be an SSH or WinRM URL
                            in the form:

                            ssh://[USERNAME]@example.com[:PORT]
          <RESOURCE>        A Chef resource, such as 'user' or 'package'
          <RESOURCE_NAME>   The name, usually used to specify what 'thing' to set up with
                            the resource. For example, given resource 'user', 'name' would be
                            the name of the user you wanted to create.
          <RECIPE>          The recipe to converge. This can be provided as one of:
                            1. Full path to a recipe file
                            2. Cookbook name. First we check the working directory for this
                               cookbook, then we check in the chef repository path. If a
                               cookbook is found we run the default recipe.
                            3. This behaves similarly to 'cookbook name' above, but it also allows
                               you to specify which recipe to use from the cookbook.
      root_description: "Whether to use root permissions on the target. Defaults to true."
      identity_file: "SSH identity file to use when connecting."
      ssl:
        desc: "Use SSL for WinRM. Current default: %1"
        verify_desc: |
          Verify peer certificate when using SSL for WinRM
          Use --ssl-no-verify when using SSL for WinRM and
          the remote host is using a self-signed certificate.
          Current default: %1
      cookbook_repo_paths:
        desc: "Comma separated list of cookbook repository paths."
      install_description: |
        Install Chef client on the target host(s) if it is not installed.
        This defaults to enabled - the installation will be performed
        if there is no Chef client on the target(s).


# Status updates shared across commands.
status:
  install_chef:
    installing: Installing Chef client version %1.
    checking_for_client: Checking for Chef client.
    upgrading: Upgrading Chef client from version %1 to %2.
    downloading: Downloading Chef client installer into local cache.
    uploading: Uploading Chef client installer to target.
    verifying: Verifying Chef client installation.
    already_present: Chef client version %1 already installed on target.
    install_success: Successfully installed Chef client version %1
    upgrade_success: Successfully upgraded Chef client from version %1 to %2.
    failure: "An error occurred while installing Chef client: %1"
  converge:
    multi_header: "Converging targets:"
    converging_recipe: Converging local recipe %1 on target...
    converging_resource: Converging %1 on target...
    creating_local_policy: Creating local policy...
    creating_remote_policy: Pushing remote policy to target...
    running_chef: Running Chef on target...
    success: "Successfully converged target!"
    failure: "Failed to converge target."
    reboot: "Reboot scheduled on target."

# Error definitions, usage Text.e.ERR999
# General format:
# First Line: brief description of the error
# Second line: blank
# Third+ : detailed description, max 76 characters per line
errors:
  # Catch-all for the worst case
  UNKNOWN: An unknown error has occurred.

  # Installer action errors
  CHEFINS002: |
    The target does not have chef-client installed.

    This command is powered by the Chef client.  In order to make use of it
    on this node, the Chef client must be installed first.

    Re-running this command without the '--no-install' flag will
    automatically perform the installation.

  CHEFINS003: |
    The target has an older version of Chef client installed.

    The target has version %1 installed, but this command
    requires a minimum version of %2.

    Please upgrade the Chef client on this node to version %2 or later.

  # Remote execution and file operation errors are prefixed CHEFRMT
  CHEFRMT001: |
    The command '%1' exited with return code '%2' on '%3'.

    The following error was reported:

      %4

  # Remote chef client run failure start here.
  CHEFCCR001: |
    Could not determine reason for converge failure.

    STDOUT (may be blank)

      %1

    STDERR (may be blank)

      %2

    An error occurred while converging the remote host.
    I was unable to retrieve the log file which would allow
    me to provide more information.  Above is the output
    that occurred while trying to retrieve the remote log file.

  CHEFCCR002: |
    The converge of the remote host failed for the
    following reason:

      %1

  CHEFCCR003: |
    The action '%1' is not valid.

    Valid actions are:

      %2

    For more information, please consult the documentation
    for this resource:

      https://docs.chef.io/resource_reference.html

  CHEFCCR004: |
    A property value you provided is not valid:

      %1

    Please consult the documentation for properties
    supported by your resource and their valid values:

      https://docs.chef.io/resource_reference.html

  CHEFCCR005: |
    '%1' is not a valid Chef resource.

    Please consult the documentation for a list of valid resources:

      https://docs.chef.io/resource_reference.html

  CHEFCCR006: |
    '%1' is not a property of '%2'.

    Please consult the documentation for %2 for a list of
    valid properties:

      https://docs.chef.io/resource_reference.html

  CHEFCCR099: |
    The converge of the remote host failed.

    Please examine the log file for a detailed cause of failure.

  # Train-related errors (connectivy, auth failure, etc)
  # are prefixed CHEFTRN. Non-specific descendants of Train::Error
  # will resolve to CHEFTRN001, and we can add additional
  # more specific text as we need it.
  CHEFTRN001: |
    An error has occurred on the %1 connection to %2:

    %2.

  CHEFTRN002: |
    An remote error has occurred:

      %1.

  # Errors that originate out of the CLI itself
  CHEFCLI001: |
    The command '%1' does not exist.

      Available commands are: %2

  # CLI Validation errors are prefixed with CHEFVAL
  CHEFVAL001: |
    No identity file at '%1'

  CHEFVAL002: |
    You must supply <TARGET> and either <RESOURCE> and <RESOURCE_NAME> or <RECIPE>

  CHEFVAL003: |
    Property '%1' did not match the 'key=value' syntax required

  CHEFVAL004: |
    Please provide a recipe in the form 'path/to/recipe/file.rb',
    'path/to/cookbook', 'cookbook_name' or 'cookbook_name::recipe_name'.

    You provided '%1'.

  CHEFVAL005: |
    The cookbook provided could not be loaded. Ensure it contains a valid
    'metadata.rb'.

    Cookbook path is '%1'.

  CHEFVAL006: |
    Cookbook '%1' could not be found in any of the following directorys

    %2

  CHEFVAL007: |
    There is no default recipe in cookbook '%2'. Please provide the name of the recipe to run, for example:
      %2::some_recipe

    Cookbook path is '%1'.

  CHEFVAL008: |
    There is no recipe named '%2' in the cookbook '%4', which I found at '%1'.

    Please include the name of the recipe you wish to converge on the remote target.

    These are the available recipes in '%4':
    %3

  CHEFVAL009: |
    File extension '%1' is unsupported. Currently recipes must be specified with a `.rb` extension.

  # General errors/unknown errors are handled with CHEFINT
  CHEFINT001: |
    An unexpected error has occurred:

      %1

  # Maps to: NameError
  CHEFNET001: |
    A network error occurred:

      %1

    Please verify the host name or address is correct and that the host is
    reachable before trying again.

  # Remote chef client run failure start here.
  CHEFUPL003: |
    Uploading config to target failed.

  CHEFUPL004: |
    Uploading handler to target failed.

  CHEFUPL005: |
    Uploading policy bundle to target failed.

  # Maps to: SSL::SSLError with message text indicating verification failure
  CHEFNET002: |
    SSL host verification failed.

    I could not verify the identity of the remote host.

    If you are certain that you are connecting to the correct host,
    you can specify the '--no-ssl-verify' option for this command, or
    make it the default by setting the following in your configuration:

      [connection.winrm]
      ssl_verify=false

  CHEFRANGE001: |
    The target '%1' contains an invalid range.

    The range '%2' mixes alphabetic and numeric values.
    A range must be one or the other.

  CHEFRANGE002:
    The target '%1' contains too many ranges.

    A single target name can contain up two ranges.

  CHEFRANGE003: !!pl
    1:
      The target provided resolves to too many hosts.

      At this time there is a limit of %2 hosts in a single operation.
    n:
      The targets provided resolve to too many hosts.

      At this time there is a limit of %2 hosts in a single operation.

  CHEFMULTI001: |
    One or more actions has failed.

    A complete list of failures and possible resolutions can
    be found in the file below:

      %1

  # Errors relating to target state:
  CHEFTARG001: |
    '%1' is not a supported target operating system at this time.

    We plan to support a range of target operating systems,
    but during this targeted beta we are constraining our efforts
    to Windows and Linux.

  footer:
    both: |
      If you are not able to resolve this issue, please contact Chef support
      at beta@chef.io and include the log file and stack trace from the
      locations below:

        %1
        %2

    log_only:  |
      If you are not able to resolve this issue, please contact Chef support
      at beta@chef.io and include the log file from the location below:
        %1

    stack_only:  |
      If you are not able to resolve this issue, please contact Chef support
      at beta@chef.io and include the stack trace from the location below:
        %1

    neither:  |
      If you are not able to resolve this issue, please contact Chef support
      at beta@chef.io
